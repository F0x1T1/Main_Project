// <auto-generated />
using System;
using Main_Project.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Main_Project.Data.Migrations
{
    [DbContext(typeof(AplContext))]
    partial class AplContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoursesVikladach", b =>
                {
                    b.Property<int>("CoursesID")
                        .HasColumnType("int");

                    b.Property<string>("TeachersVikladachID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CoursesID", "TeachersVikladachID");

                    b.HasIndex("TeachersVikladachID");

                    b.ToTable("CoursesVikladach");
                });

            modelBuilder.Entity("Main_Project.Models.Courses", b =>
                {
                    b.Property<int>("CoursesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameCourses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("Price(18,2)");

                    b.HasKey("CoursesID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Main_Project.Models.FormaNavch", b =>
                {
                    b.Property<string>("StudID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Form")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("StudID");

                    b.ToTable("FormaNavch");
                });

            modelBuilder.Entity("Main_Project.Models.Napryam", b =>
                {
                    b.Property<string>("NapryamID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Predmetna_obl")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("NapryamID");

                    b.ToTable("Napryam");
                });

            modelBuilder.Entity("Main_Project.Models.StudCourses", b =>
                {
                    b.Property<int>("CoursesID")
                        .HasColumnType("int");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("EnrollmentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("Grades")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(3);

                    b.HasKey("CoursesID", "Id");

                    b.HasIndex("Id");

                    b.ToTable("StudCourses");
                });

            modelBuilder.Entity("Main_Project.Models.Student", b =>
                {
                    b.Property<string>("StudID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("date");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormaNavchID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Teachingtype")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudID");

                    b.HasIndex("FormaNavchID");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("Main_Project.Models.Vikladach", b =>
                {
                    b.Property<string>("VikladachID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("FormaNavchStudID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("NapryamID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nomer")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("VikladachID");

                    b.HasIndex("FormaNavchStudID");

                    b.HasIndex("NapryamID");

                    b.ToTable("Vikladach");
                });

            modelBuilder.Entity("CoursesVikladach", b =>
                {
                    b.HasOne("Main_Project.Models.Courses", null)
                        .WithMany()
                        .HasForeignKey("CoursesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Main_Project.Models.Vikladach", null)
                        .WithMany()
                        .HasForeignKey("TeachersVikladachID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Main_Project.Models.StudCourses", b =>
                {
                    b.HasOne("Main_Project.Models.Courses", "Courses")
                        .WithMany("StudCourses")
                        .HasForeignKey("CoursesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Main_Project.Models.Student", "Student")
                        .WithMany("StudCourses")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Courses");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Main_Project.Models.Student", b =>
                {
                    b.HasOne("Main_Project.Models.FormaNavch", "FormaNavch")
                        .WithMany("student")
                        .HasForeignKey("FormaNavchID");

                    b.Navigation("FormaNavch");
                });

            modelBuilder.Entity("Main_Project.Models.Vikladach", b =>
                {
                    b.HasOne("Main_Project.Models.FormaNavch", "FormaNavch")
                        .WithMany("Vikladach")
                        .HasForeignKey("FormaNavchStudID");

                    b.HasOne("Main_Project.Models.Napryam", "Napryam")
                        .WithMany("Vikladach")
                        .HasForeignKey("NapryamID");

                    b.Navigation("FormaNavch");

                    b.Navigation("Napryam");
                });

            modelBuilder.Entity("Main_Project.Models.Courses", b =>
                {
                    b.Navigation("StudCourses");
                });

            modelBuilder.Entity("Main_Project.Models.FormaNavch", b =>
                {
                    b.Navigation("student");

                    b.Navigation("Vikladach");
                });

            modelBuilder.Entity("Main_Project.Models.Napryam", b =>
                {
                    b.Navigation("Vikladach");
                });

            modelBuilder.Entity("Main_Project.Models.Student", b =>
                {
                    b.Navigation("StudCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
